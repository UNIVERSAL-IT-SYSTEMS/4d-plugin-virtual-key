/* --------------------------------------------------------------------------------
 #
 #	4DPlugin.cpp
 #	source generated by 4D Plugin Wizard
 #	Project : Virtual Key
 #	author : miyako
 #	2015/06/08
 #
 # --------------------------------------------------------------------------------*/


#include "4DPluginAPI.h"
#include "4DPlugin.h"

//full list of VKs can be found here
//https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731%28v=vs.85%29.aspx

// (about releasing the key afterwards)
//http://www.codeproject.com/Articles/2334/Toggling-the-Num-Lock-Caps-Lock-and-Scroll-Lock-ke

// (about windows 8)
//http://mrxray.on.coocan.jp/Delphi/plSamples/450_ChangeRomanKana.htm

void PluginMain(PA_long32 selector, PA_PluginParameters params)
{
	try
	{
		PA_long32 pProcNum = selector;
		sLONG_PTR *pResult = (sLONG_PTR *)params->fResult;
		PackagePtr pParams = (PackagePtr)params->fParameters;

		CommandDispatcher(pProcNum, pResult, pParams); 
	}
	catch(...)
	{

	}
}

void CommandDispatcher (PA_long32 pProcNum, sLONG_PTR *pResult, PackagePtr pParams)
{
	switch(pProcNum)
	{
// --- Virtual Key

		case 1 :
			POST_VIRTUAL_KEY(pResult, pParams);
			break;

		case 2 :
			Test_virtual_key(pResult, pParams);
			break;

	}
}

// ---------------------------------- Virtual Key ---------------------------------


void POST_VIRTUAL_KEY(sLONG_PTR *pResult, PackagePtr pParams)
{
	C_LONGINT Param1;

	Param1.fromParamAtIndex(pParams, 1);

#if VERSIONWIN
	INPUT input[2];
	ZeroMemory(input, sizeof(input)); 

	input[0].type = input[1].type = INPUT_KEYBOARD;
	input[0].ki.wVk = input[1].ki.wVk = Param1.getIntValue();
		
	input[1].ki.dwFlags =KEYEVENTF_KEYUP;
	
	SendInput(2, input, sizeof(INPUT));
#endif

}

void Test_virtual_key(sLONG_PTR *pResult, PackagePtr pParams)
{
	C_LONGINT Param1;
	C_LONGINT returnValue;

	Param1.fromParamAtIndex(pParams, 1);

#if VERSIONWIN
	returnValue.setIntValue(GetKeyState(Param1.getIntValue()) & 1);
#endif

	returnValue.setReturn(pResult);
}

